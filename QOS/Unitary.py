# =================================================== DESCRIPTION =====================================================
# ---------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------
# =================================================== DESCRIPTION =====================================================


# =================================================== EXAMPLES ========================================================
# ---------------------------------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------------------------
# =================================================== EXAMPLES ========================================================


# =====================================================================================================================
# scientific
import numpy as np
import scipy.sparse.linalg as lg
from scipy.sparse import lil_matrix, csc_matrix
# -------------------------------------------------------------------------------------------------
# Tools
from lib.Matrix import Matrix
# -------------------------------------------------------------------------------------------------
# from PyQuantum.TC.Hamiltonian import *
# import scipy.linalg as lg
# -------------------------------------------------------------------------------------------------


# -------------------------------------------------------------------------------------------------
class Unitary(Matrix):
    # -----------------------------------------------------------------------------------------------------------------
    # ---------------------------------------------------- INIT -------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------

    def __init__(self, H, dt):
        # Assert(isinstance(H, Hamiltonian) or isinstance(
        #     H, HamiltonianL), "H is not Hamiltonian")
        Assert(isinstance(dt, (int, float)), "dt is not numeric")

        Assert(dt > 0, "dt <= 0")

        # H_data = np.array(H.matrix.data, dtype=np.complex128)

        # self.data = np.matrix(lg.expm(-1j * H_data * dt), dtype=np.complex128)
        # print(type(H.matrix.data))
        # print(type(H.data))
        data = lg.expm(-1j * csc_matrix(H.data) * dt)
        # print(type(data))
        data = csc_matrix(data, dtype=np.complex128)

        # self.data = lg.expm(-1j * H.data * dt)
        # self.data = lg.expm(-1j * H.data.data * dt)
        # print(np.shape(self.data))
        # self.data = csc_matrix(self.data, dtype=np.complex128)

        super(Unitary, self).__init__(m=H.size, n=H.size, dtype=np.complex128, data=data)

        self.check_unitarity()
    # -----------------------------------------------------------------------------------------------------------------
    # -----------------------------------------------------------------------------------------------------------------

# =====================================================================================================================
